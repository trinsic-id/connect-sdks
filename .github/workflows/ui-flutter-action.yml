name: Build and Publish UI Flutter SDK

on:
  workflow_call:
    inputs:
      publish:
        type: boolean
        required: false
        default: false
        description: "Publish the package, default is false"

jobs:
  build_and_publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files_yaml: |
            sample_pubspec:
              - ui-flutter/samples/pubspec.yaml
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.24.0
      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
      - name: Setup credentials (todo investigate expiration)
        run: |
          mkdir -p $XDG_CONFIG_HOME/dart
          cat <<EOF > $XDG_CONFIG_HOME/dart/pub-credentials.json
          {
            "accessToken":"${{ secrets.DART_PUB_OAUTH_ACCESS_TOKEN }}",
            "refreshToken":"${{ secrets.DART_PUB_OAUTH_REFRESH_TOKEN }}",
            "tokenEndpoint":"https://accounts.google.com/o/oauth2/token",
            "scopes": [ "openid", "https://www.googleapis.com/auth/userinfo.email" ],
            "expiration": 1570721159348
          }
          EOF
      - name: Verify credentials
        run: cat $XDG_CONFIG_HOME/dart/pub-credentials.json
      - name: Run Flutter SDK Tests
        working-directory: ./ui-flutter/sdk
        run: flutter test
      - name: Build Sample Android App (Local Library)
        if: steps.changed-files.outputs.sample_pubspec_any_changed == 'false' || inputs.publish == 'true'
        working-directory: ./ui-flutter
        run: ./build-sample.ps1 -useLocalLibrary
        shell: pwsh
      - name: Build Sample Android App (Published Library)
        if: steps.changed-files.outputs.sample_pubspec_any_changed == 'true' && inputs.publish != 'true'
        working-directory: ./ui-flutter
        run: ./build-sample.ps1
        shell: pwsh
      - name: Publish SDK (dry run)
        working-directory: ./
        if: inputs.publish == false
        run: ./ui-flutter/publish-sdk.ps1 -dryRun
        shell: pwsh
      - name: Publish SDK
        working-directory: ./
        if: inputs.publish == true
        run: ./ui-flutter/publish-sdk.ps1
        shell: pwsh
